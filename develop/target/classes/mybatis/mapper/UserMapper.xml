<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.greyu.ysj.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.greyu.ysj.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="pass_word" property="passWord" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="BIGINT" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR"/>
    <result column="open_id" property="openId" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.greyu.ysj.entity.UserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.greyu.ysj.entity.UserExample" >
    delete from tb_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insertSelective" parameterType="com.greyu.ysj.entity.User" >
    insert into tb_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="passWord != null" >
        pass_word,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="referee != null" >
        referee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="referee != null" >
        #{referee,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.greyu.ysj.entity.UserExample" resultType="java.lang.Integer" >
    select count(*) from tb_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.passWord != null" >
        pass_word = #{record.passWord,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=BIGINT},
      </if>
      <if test="record.avatar != null" >
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      pass_word = #{record.passWord,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=BIGINT},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.greyu.ysj.entity.User" >
    update tb_user
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null" >
        pass_word = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=BIGINT},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.greyu.ysj.entity.User" >
    update tb_user
    set user_name = #{userName,jdbcType=VARCHAR},
      pass_word = #{passWord,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=BIGINT},
      avatar = #{avatar,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  
  <!-- **************************************************** -->
  <sql id="Base_Column_List" >
    user_id, user_name, pass_word, phone, avatar, sex, nick_name, address, role, open_id
  </sql>
  <insert id="insert" parameterType="com.greyu.ysj.entity.User" >
    insert into tb_user (user_name, pass_word, phone, sex, avatar, nick_name, birth, email, address, referee, role, open_id)
    values (#{userName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, #{phone,jdbcType=BIGINT}, #{sex,jdbcType=VARCHAR}, 
    		#{avatar,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, #{birth,jdbcType=DATE}, #{email,jdbcType=VARCHAR}, 
    		#{address,jdbcType=VARCHAR}, #{referee,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, #{openId,jdbcType=VARCHAR})
  </insert>
  <select id="findByOpenId" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"/>
  	from tb_user where open_id = #{openId}
  </select> 
  <select id="findByName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"/>
  	from tb_user where user_name = #{name}
  </select>
  <select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List" />
  	from tb_user where user_id = #{userId}
  </select>
  <select id="findBySupplier" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select distinct t1.user_id, t1.user_name, t1.pass_word, t1.phone, t1.avatar, t1.sex, t1.nick_name, t1.address
	from tb_user t1 inner join tb_order t2 on t1.user_id = t2.buyer inner join tb_good t3 on t3.good_id = t2.good_id
	inner join (select good_id, max(buy_price) max_price from tb_order group by good_id) t4 on t4.good_id = t2.good_id and t4.max_price = t2.buy_price
	where t3.supplier = #{supplier}
  </select>
  <select id="findAll" resultMap="BaseResultMap">
  	select * from tb_user order by nick_name
  </select>
</mapper>